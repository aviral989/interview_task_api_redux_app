{"ast":null,"code":"var _jsxFileName = \"/Users/aviralgupta/Desktop/api-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Table, Tag, Space } from 'antd';\nimport 'antd/dist/antd.css';\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport React from 'react';\nimport { getData } from './redux/actions';\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App(_ref) {\n  _s();\n\n  let {\n    fetchcoins,\n    data1\n  } = _ref;\n  React.useEffect(() => {\n    fetchcoins();\n  }, []);\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 23\n    }, this)\n  }, {\n    title: 'ID',\n    dataIndex: 'id',\n    key: 'id'\n  }, {\n    title: 'Change Percent in 24Hr',\n    dataIndex: 'changePercent24Hr',\n    key: 'changePercent24Hr'\n  }, {\n    title: 'Explorer',\n    dataIndex: 'explorer',\n    key: 'explorer'\n  }, {\n    title: 'Address',\n    dataIndex: 'address',\n    key: 'address'\n  }, {\n    title: 'marketCapUsd',\n    dataIndex: 'marketCapUsd',\n    key: 'marketCapUsd'\n  }, {\n    title: 'Tags',\n    key: 'tags',\n    dataIndex: 'tags',\n    render: tags => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: tags.map(tag => {\n        let color = tag.length > 5 ? 'geekblue' : 'green';\n\n        if (tag === 'loser') {\n          color = 'volcano';\n        }\n\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          color: color,\n          children: tag.toUpperCase()\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false)\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n      size: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        children: [\"Invite \", record.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }];\n  const data = [{\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n    tags: ['nice', 'developer']\n  }, {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n    tags: ['loser']\n  }, {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n    tags: ['cool', 'teacher']\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [console.log(\"data\", data1), (data1 === null || data1 === void 0 ? void 0 : data1.loading) ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\n\nfunction mapStateToProps(state) {\n  return {\n    data1: state\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchcoins: () => dispatch(getData())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aviralgupta/Desktop/api-app/src/App.js"],"names":["Table","Tag","Space","useSelector","useDispatch","React","getData","connect","App","fetchcoins","data1","useEffect","columns","title","dataIndex","key","render","text","tags","map","tag","color","length","toUpperCase","record","name","data","age","address","console","log","loading","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { Table, Tag, Space } from 'antd';\nimport 'antd/dist/antd.css';\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport React from 'react';\nimport { getData } from './redux/actions'\nimport { connect } from \"react-redux\";\n\nfunction App({ fetchcoins,data1 }) {\n\n\n  React.useEffect(()=>{\n  fetchcoins() \n  },[])\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: text => <a>{text}</a>,\n    },\n    {\n      title: 'ID',\n      dataIndex: 'id',\n      key: 'id',\n    },\n    {\n      title: 'Change Percent in 24Hr',\n      dataIndex: 'changePercent24Hr',\n      key: 'changePercent24Hr',\n    },\n    {\n      title: 'Explorer',\n      dataIndex: 'explorer',\n      key: 'explorer',\n    },\n    {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n    },\n    {\n      title: 'marketCapUsd',\n      dataIndex: 'marketCapUsd',\n      key: 'marketCapUsd',\n    },\n    {\n      title: 'Tags',\n      key: 'tags',\n      dataIndex: 'tags',\n      render: tags => (\n        <>\n          {tags.map(tag => {\n            let color = tag.length > 5 ? 'geekblue' : 'green';\n            if (tag === 'loser') {\n              color = 'volcano';\n            }\n            return (\n              <Tag color={color} key={tag}>\n                {tag.toUpperCase()}\n              </Tag>\n            );\n          })}\n        </>\n      ),\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      render: (text, record) => (\n        <Space size=\"middle\">\n          <a>Invite {record.name}</a>\n          <a>Delete</a>\n        </Space>\n      ),\n    },\n  ];\n  \n  const data = [\n    {\n      key: '1',\n      name: 'John Brown',\n      age: 32,\n      address: 'New York No. 1 Lake Park',\n      tags: ['nice', 'developer'],\n    },\n    {\n      key: '2',\n      name: 'Jim Green',\n      age: 42,\n      address: 'London No. 1 Lake Park',\n      tags: ['loser'],\n    },\n    {\n      key: '3',\n      name: 'Joe Black',\n      age: 32,\n      address: 'Sidney No. 1 Lake Park',\n      tags: ['cool', 'teacher'],\n    },\n  ];\n  return (\n    <div className=\"App\">\n      {console.log(\"data\",data1)}\n      {data1?.loading ?\n        <h2>loading</h2>  \n:<Table columns={columns} dataSource={data} />\n\n}\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    data1: state\n  };\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n   fetchcoins: () => dispatch(getData()) \n  }\n} \nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n\n"]},"metadata":{},"sourceType":"module"}